# ==================================================================
# GIT
# ==================================================================

snippet @commit
$1${2: (resolve #$3)}
endsnippet


# ==================================================================
# BASH
# ==================================================================

snippet @script
#!/bin/bash
set -euo pipefail

$1
endsnippet


# ==================================================================
# JAVASCRIPT
# ==================================================================

snippet @function
({$1}) => (
  $2
)
endsnippet

snippet @module
const $1 = @function$2

export default $1
endsnippet

snippet @import
import $1 from '$2$1'
endsnippet

snippet @log
console.log('$1', $1)
endsnippet

snippet @fetch
fetch(payload.lesson.lesson_url, {
  method: 'PUT',
  body: JSON.stringify({}),
  mode: 'cors',
  headers,
})
  .then(response => response.json())
  .then(json => json)
  .catch(error => console.error(error))
endsnippet


# ==================================================================
# JEST
# ==================================================================

snippet @test
import $1 from '.'

test('$2', () => {
  expect($3).${4:toBe}($5)
})
endsnippet

snippet @snapshot
import React from 'react'
import {create} from 'react-test-renderer'
import $1 from '.'

test('$2', () => (
  expect(create(
    @tag$3
  )).toMatchSnapshot()
))
endsnippet


# ==================================================================
# REACT
# ==================================================================

snippet @tag
<${1:div}
  $2
>
  $3
</$1>
endsnippet

snippet @stateless
import React from 'react'

@module$1
endsnippet

snippet @stateful
import React, {Component} from 'react'

class $1 extends Component {

  state = {
    $2: $3,
  }

  render() {
    const {$2} = this.state
    const {$4} = this.props
    return (
      @tag$5
    )
  }
}

export default $1
endsnippet

snippet @callback
import {Component} from 'react'

class $1 extends Component {
  
  state = {
    $2: $3,
  }

  render() {
    const {$2} = this.state
    const {children} = this.props
    return children({$2})
  }
}

export default $1
endsnippet

snippet @proptype
$1: PropTypes.$2${3:.isRequired},
endsnippet

# EGGHEAD-UI

snippet @maybe
<Maybe condition={$1}>
  $2
</Maybe>
endsnippet

snippet @button
<Button onClick={$1}>
  $2
</Button>
endsnippet

snippet @icon
<Icon
  type='$1'
  size='$2'
  color='$3'
/>
endsnippet

snippet @heading
<Heading level='$1'>
  $2
</Heading>
endsnippet

snippet @paragraph
<Paragraph>
  $2
</Paragraph>
endsnippet

snippet @request
<Request url='$1'>
  {({data}) => (
    $2
  )}
</Request>
endsnippet

snippet @lazy
<Request
  ${1:lazy}
  method='$2'
  url='$3'
  body={{$4}}
>
  {({request, data}) => (
    $5
  )}
</Request>
endsnippet

snippet	@image
<Image 
  src={$1}
  alt={$2}
  className='$3'
/>
endsnippet

snippet @card
<Card
  title={$1}
  description={$2}
>
  $3
</Card>
endsnippet

snippet @list
<List items={map($1, $2 => (
  $3
))} />
endsnippet

snippet @columns
<LayoutColumns items={[
  $1,
]} />
endsnippet

snippet @anchor
<Anchor url={$1}>
  $2
</Anchor>
endsnippet

snippet @prompt
<Prompt
  description={$1}
	actionText={$2}
  action={$3}
/>
endsnippet
